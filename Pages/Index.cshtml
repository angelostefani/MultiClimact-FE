@page
@model IndexModel
@{
    // Layout = null;
    ViewData["Title"] = Localizer["title"];
    List<string> Maps = new List<string> { "OpenStreetMap - EPSG:3857", "Google Normal - EPSG:3857", "Google Satellite - EPSG:3857", "Google Hybrid - EPSG:3857", "OpenTopoMap", "Sentinel-2 cloudless", "Metacarta - EPSG:4326", "geoSdi - EPSG:4326", "geoSdi No Map - EPSG:4326" };

}

@if (!User.Identity.IsAuthenticated)
{
    Response.Redirect("Identity/Account/Login");
}
else
{
    <!DOCTYPE html>
    <html>
    <head>
        <title>OpenLayers Map</title>
        <link rel="stylesheet" href="~/lib/openlayers/ol.css" type="text/css" />
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

        <style>
            /* Stile per la barra di ricerca */
            .search-bar {
                position: absolute;
                top: 0px;
                margin-top: 105px;
                right: 15px;
                width: 20%;
                z-index: 1000;
                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); /* Effetto ombra */
            }

            /* Stile per la dropdown della mappa */
            .map-dropdown {
                position: absolute;
                top: 50px;
                right: 10px;
                z-index: 1000;
                box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); /* Effetto ombra */
            }
        </style>

        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/openlayers/dist/ol.js"></script>
    </head>
    <body>
        <!-- Mappa -->
        <div id="space" style="width: 100%; height: 10vh;"></div>
        <div id="map" style="width: 100%; height: 100vh; cursor: pointer; overflow: hidden; display: block;"></div>

        <div class="search-bar">
            <div class="input-group">
                <input id="addressInput" placeholder="Cerca un indirizzo" type="text" class="form-control" style="text-overflow: ellipsis;">
            </div>
            <div id="suggestions" class="list-group mt-1" style="display: none;"></div>
        </div>

        <!-- Dropdown per la selezione della mappa -->
        <div class="dropdown position-absolute top-0" style="margin-top: 105px; margin-left: 50px;">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="mapDropdownButton" aria-haspopup="true" aria-expanded="false">
                Map
            </button>
            <div class="dropdown-menu" aria-labelledby="mapDropdownButton">
                @foreach (var mappa in Maps)
                {
                    <a class="dropdown-item" href="#" onclick="changeMap('@mappa.Trim()')">@mappa.Trim()</a>
                }
            </div>
        </div>

        <script type="text/javascript">
            // Funzione per gestire l'apertura/chiusura del menu a discesa quando si fa clic sul pulsante "Seleziona Mappa"
            $('#mapDropdownButton').on('click', function () {
                $(this).next('.dropdown-menu').toggleClass('show');
            });

            // Funzione per gestire la selezione della mappa quando si fa clic su una delle voci del menu a discesa
            $('.dropdown-item').on('click', function () {
                $('.dropdown-menu').removeClass('show');
            });
        </script>

        <script type="text/javascript">
            var map;
            var currentBaseLayer;

            function initMap() {
                map = new ol.Map({
                    target: 'map',
                    layers: [
                        new ol.layer.Tile({
                            source: new ol.source.OSM()
                        })
                    ],
                    view: new ol.View({
                        center: ol.proj.fromLonLat([0, 0]),
                        zoom: 2
                    })
                });

                // Memorizza il layer corrente (OSM) in modo da poterlo rimuovere quando si cambia la mappa di base
                currentBaseLayer = map.getLayers().getArray()[0];
            }

            // Cambia la mappa di base
            function changeMap(mapName) {
                var newBaseLayer;

                // Rimuove il layer corrente
                map.removeLayer(currentBaseLayer);

                // Crea il nuovo layer in base alla mappa selezionata
                switch (mapName) {
                    case 'OpenStreetMap - EPSG:3857':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.OSM()
                        });
                        break;
                    case 'Google Normal - EPSG:3857':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}'
                            })
                        });
                        break;
                    case 'Google Satellite - EPSG:3857':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}'
                            })
                        });
                        break;
                    case 'Google Hybrid - EPSG:3857':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}'
                            })
                        });
                        break;
                    case 'OpenTopoMap':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'https://tile.opentopomap.org/{z}/{x}/{y}.png'
                            })
                        });
                        break;
                    case 'Sentinel-2 cloudless':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'https://tiles.maps.eox.at/wmts/1.0.0/s2cloudless-2018_3857/default/g/{z}/{y}/{x}.jpg'
                            })
                        });
                        break;
                    case 'Metacarta - EPSG:4326':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'http://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryTopo/MapServer/tile/{z}/{y}/{x}'
                            })
                        });
                        break;
                    case 'geoSdi - EPSG:4326':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'http://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}'
                            })
                        });
                        break;
                    case 'geoSdi No Map - EPSG:4326':
                        newBaseLayer = new ol.layer.Tile({
                            source: new ol.source.XYZ({
                                url: 'http://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}'
                            })
                        });
                        break;
                    case 'Empty layer - EPSG:3857':
                        // Inserire qui la configurazione per un layer vuoto
                        break;
                    default:
                        console.error('Mappa non supportata:', mapName);
                        return; // Esce dalla funzione se la mappa non è supportata
                }


                // Aggiunge il nuovo layer alla mappa
                map.addLayer(newBaseLayer);

                // Aggiorna il riferimento al layer corrente
                currentBaseLayer = newBaseLayer;
            }

            $(document).ready(function () {
                initMap();
            });

            // Funzione per cercare gli indirizzi e visualizzare i suggerimenti
            $('#addressInput').on('input', function () {
                var address = $(this).val();
                var url = 'https://nominatim.openstreetmap.org/search?q=' + address + '&format=json&addressdetails=1&limit=5';

                $.getJSON(url, function (data) {
                    $('#suggestions').empty();
                    if (data && data.length > 0) {
                        $('#suggestions').show();
                        $.each(data, function (i, item) {
                            $('#suggestions').append('<a href="#" class="list-group-item list-group-item-action">' + item.display_name + '</a>');
                        });
                    } else {
                        $('#suggestions').hide();
                    }
                });
            });

            // Funzione per zoomare sulla posizione selezionata dall'utente
            $('#suggestions').on('click', 'a', function (e) {
                e.preventDefault();
                var address = $(this).text();
                var url = 'https://nominatim.openstreetmap.org/search?q=' + address + '&format=json&addressdetails=1&limit=1';

                $.getJSON(url, function (data) {
                    if (data && data.length > 0) {
                        var lon = parseFloat(data[0].lon);
                        var lat = parseFloat(data[0].lat);
                        map.getView().setCenter(ol.proj.fromLonLat([lon, lat]));
                        map.getView().setZoom(15);
                        $('#suggestions').hide();
                    }
                });
            });

            // Funzione per pulire l'input di ricerca
            $('#clearSearch').click(function () {
                $('#addressInput').val('');
                $('#suggestions').empty().hide();
            });
        </script>
    </body>
    </html>
}
